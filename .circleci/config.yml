# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    parallelism: 3
    docker:
    # specify the version you desire here
    - image: circleci/ruby:2.6.3-node-browsers
        environment: # environment variables for primary container
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: circleci-demo-ruby
          RAILS_ENV: test

    - image: circleci/postgres:11.4
        environment: # environment variables for database
          POSTGRES_USER: circleci-demo-ruby
          POSTGRES_DB: test_rails_test
          POSTGRES_PASSWORD: ""

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
    - checkout

    # Which version of bundler?
    - run:
        name: Which bundler?
        command: bundle -v

    # Download and cache dependencies
    # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "Gemfile.lock" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

    - run: # Install Ruby dependencies
        name: install dependencies
        command: |
          bundle install --jobs=4 --retry=3 --path vendor/bundle

    # Store bundle cache for Ruby dependencies
    - save_cache:
        paths:
        - ./vendor/bundle
        key: v1-dependencies-{{ checksum "Gemfile.lock" }}

        - run:
            name: Wait for DB
            command: dockerize -wait tcp://localhost:5432 -timeout 1m

    # Database setup
    - run: bundle exec rake db:setup



    - run:
        name: Run rspec in parallel
        command: |
          bundle exec rspec --profile 10 \
                            --format RspecJunitFormatter \
                            --out test_results/rspec.xml \
                            --format progress \
                            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)


    # collect reports
    - store_test_results:
        path: /tmp/test-results
    - store_artifacts:
        path: /tmp/test-results
        destination: test-results
